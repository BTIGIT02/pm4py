% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/discovery.R
\name{discovery}
\alias{discovery}
\alias{discovery_inductive}
\alias{variant_inductive_only_dfg}
\alias{discovery_alpha}
\alias{variant_alpha_classic}
\title{Petri net discovery algorithms}
\usage{
discovery_inductive(eventlog,
  parameters = param_activity_key(bupaR::activity_id(eventlog)),
  variant = variant_inductive_only_dfg(), convert = TRUE)

variant_inductive_only_dfg()

discovery_alpha(eventlog,
  parameters = param_activity_key(bupaR::activity_id(eventlog)),
  variant = variant_alpha_classic(), convert = TRUE)

variant_alpha_classic()
}
\arguments{
\item{eventlog}{A bupaR event log.}

\item{parameters}{A named list of PM4PY parameters, by default the \code{activity_key} from the bupaR event log is used.
Use \link{param_activity_key} to specifiy a different key.}

\item{variant}{The variant of the discovery algorithm to be used.
For Inductive Miner currently only \code{variant_inductive_only_dfg} is supported.}

\item{convert}{TRUE to automatically convert Python objects to their R equivalent.
If you pass FALSE you can do manual conversion using the \link[reticulate]{r-py-conversion} function.}
}
\value{
A named list with elements \code{petrinet}, \code{initial_marking}, and \code{final_marking} or the original Python object.
}
\description{
PM4PY discovery algorithms that discover a Petri net and its initial and final marking. Currently the Inductive Miner and the Alpha Miner are implemented.
}
\examples{
\dontrun{
library(eventdataR)
data(patients)
net <- discovery_inductive(patients)

# Show details of the obtained bupaR Petri net
print(net$petrinet)

# initial marking is a character vector
print(net$initial_marking)

# final marking is a character vector
print(net$final_marking)

# Petri net can be used with other bupaR functions
petrinetR::render_PN(net$petrinet)

# Keep an unconverted PM4PY Petri net for use in other PM4PY functions
py_net <- discovery_inductive(patients, convert = FALSE)
}

}
