% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alignments.R
\name{conformance_diagnostics_alignments}
\alias{conformance_diagnostics_alignments}
\title{Apply the alignments algorithm between a log and a process model}
\usage{
conformance_diagnostics_alignments(
  eventlog,
<<<<<<< Updated upstream:man/conformance_diagnostics_alignments.Rd
  marked_petrinet,
  activity_key,
  timestamp_key,
  case_id_key,
=======
  marked_petrinet_list,
  multi_processing = FALSE,
>>>>>>> Stashed changes:man/conformance_diagnostics_alignments_111.Rd
  convert = TRUE,
  ...
)
}
\arguments{
\item{eventlog}{A bupaR or PM4PY event log.}

\item{marked_petrinet_list}{\code{\link{list}}: An object of type \code{list} returned by \code{\link[=discovery_inductive]{discovery_inductive()}} and containing 3 elements:
\itemize{
\item petri net (list of places, transitions, flows)
\item initial marking: place identifier of the initial marking.
\item final marking: place identifier of the final marking.
}}

\item{multi_processing}{\link{lgl} (default \code{\link{FALSE}}): Disables if \code{FALSE}, enables if \code{TRUE} multiprocessing in inductive miner.}

\item{convert}{\code{TRUE} to automatically convert Python objects to their R equivalent.
If you pass \code{FALSE} you can do manual conversion using the \link[reticulate]{r-py-conversion} function.}
}
\value{
alignment diagnostics.
}
\description{
Alignment-based replay aims to find one of the best alignment between the trace and the model.
}
\examples{
# As Inductive Miner of PM4Py is not life-cycle aware, keep only `complete` events:
  patients_completes <- patients[patients$registration_type == "complete", ]

# Discover a Petri net
  net <- discovery_inductive(patients_completes)

# Align event log and Petri net
a <- conformance_alignment(patients_completes,
                             net$petrinet,
                             net$initial_marking,
                             net$final_marking)

# Alignment is returned as data frame
head(a)


}
\seealso{
\url{https://pm4py.fit.fraunhofer.de/static/assets/api/2.3.0/pm4py.html#pm4py.conformance.conformance_diagnostics_alignments}
}
