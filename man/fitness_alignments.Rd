% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alignments.R
\name{fitness_alignments}
\alias{fitness_alignments}
\title{Apply the \strong{fitness} alignments algorithm between a log and a process model}
\usage{
fitness_alignments(
  eventlog,
  petrinet,
  initial_marking,
  final_marking,
  activity_key,
  timestamp_key,
  case_id_key,
  convert = TRUE
)
}
\arguments{
\item{eventlog}{A bupaR or PM4PY event log.}

\item{petrinet}{A bupaR or PM4PY Petri net.}

\item{initial_marking}{A R vector with the place identifiers of the initial marking or a PM4PY marking.
By default the initial marking of the bupaR Petri net will be used if available.}

\item{final_marking}{A R vector with the place identifiers of the final marking or a PM4PY marking.}

\item{activity_key}{An activity name/identifier.}

\item{timestamp_key}{A timestamp.}

\item{case_id_key}{A unique case identifier.}

\item{convert}{\code{TRUE} to automatically convert Python objects to their R equivalent.
If you pass \code{FALSE} you can do manual conversion using the \link[reticulate]{r-py-conversion} function.}
}
\value{
fitness alignments.
}
\description{
The calculation of the replay fitness aim to calculate how much of the behavior in the log is admitted by the process model.
}
