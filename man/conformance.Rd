% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alignments.R
\name{conformance}
\alias{conformance}
\alias{conformance_alignment}
\alias{variant_state_equation_a_star}
\title{Alignment between an Event Log and a Petri net}
\usage{
conformance_alignment(eventlog, petrinet, initial_marking, final_marking,
  parameters = default_parameters(eventlog),
  variant = variant_state_equation_a_star(), convert = TRUE)

variant_state_equation_a_star()
}
\arguments{
\item{eventlog}{A bupaR or PM4PY event log.}

\item{petrinet}{A bupaR or PM4PY Petri net.}

\item{initial_marking}{A R vector with the place identifiers of the initial marking or a PM4PY marking.
By default the initial marking of the bupaR Petri net will be used if available.}

\item{final_marking}{A R vector with the place identifiers of the final marking or a PM4PY marking.}

\item{parameters}{PM4PY alignment parameter.
By default the \code{activity_key} from the bupaR event log is specified using \link{param_activity_key}.}

\item{variant}{The alignment variant to be used.}

\item{convert}{\code{TRUE} to automatically convert Python objects to their R equivalent. If you pass \code{FALSE} you can do manual conversion using the \link[reticulate]{r-py-conversion} function.}
}
\value{
A \code{data.frame} describing the alignment in terms of log and model moves.
}
\description{
Alignment between an Event Log and a Petri net
}
\examples{
\dontrun{
library(eventdataR)
data(patients)
net <- discovery_inductive(patients)

a <- conformance_alignment(patients,
                           net$petrinet,
                           net$initial_marking,
                           net$final_marking)
}

}
