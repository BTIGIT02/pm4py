% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/discover_inductive.R
\name{discover_inductive}
\alias{discover_inductive}
\alias{discover_inductive.log}
\title{Petri net discovery algorithms}
\usage{
discover_inductive(
  log,
  multi_processing = FALSE,
  noise_threshold = 0,
  convert = TRUE
)

\method{discover_inductive}{log}(
  log,
  multi_processing = FALSE,
  noise_threshold = 0,
  convert = TRUE
)
}
\arguments{
\item{log}{\code{\link{log}}: Object of class \code{\link{log}} or derivatives (\code{\link{grouped_log}}, \code{\link{eventlog}},}

\item{multi_processing}{\link{logical} (default \code{\link{FALSE}}): Disables if \code{FALSE}, enables if \code{TRUE} multiprocessing in inductive miner.}

\item{noise_threshold}{\link{numeric} (default: 0): noise threshold.
For Inductive Miner currently only \code{variant_inductive_imdfb} is supported.}

\item{convert}{\link{logical} (default: \link{TRUE}): \link{TRUE} to automatically convert Python objects to their R equivalent.
If you pass \link{FALSE} you can do manual conversion using the \link[reticulate]{r-py-conversion} function.}
}
\value{
A named list with elements \code{petrinet}, \code{initial_marking}, and \code{final_marking} or the original Python object.
}
\description{
PM4PY discovery algorithms that discover a Petri net and its initial and final marking. Currently the Inductive Miner and the Alpha Miner are implemented.
}
\section{Methods (by class)}{
\itemize{
\item \code{discover_inductive(log)}: Discover Inductive Miner model based on event log

}}
